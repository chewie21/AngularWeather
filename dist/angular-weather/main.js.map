{"version":3,"sources":["./src/app/pipes/string.pipe.ts","./src/environments/environment.ts","./src/app/components/cities/cities.component.ts","./src/app/components/cities/cities.component.html","./src/app/components/main/main.component.ts","./src/app/components/main/main.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/main.service.ts","./src/app/pipes/degrees.pipe.ts","./src/app/components/weather/weather.component.ts","./src/app/components/weather/weather.component.html","./src/app/app-routing.module.ts","./src/app/pipes/pressure.pipe.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'string'\r\n})\r\nexport class StringPipe implements PipeTransform{\r\n  transform(value: string): string {\r\n    return value.charAt(0).toUpperCase() + value.slice(1).toLowerCase();\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nimport {Environment} from './interface';\n\nexport const environment: Environment = {\n  production: false,\n  apiKey: 'cfc89786c6705ea8a7b2ba2590107043',\n  apiUrl: `https://api.openweathermap.org`\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, OnInit} from '@angular/core';\nimport {MainService} from '../../services/main.service';\nimport {faTimes} from '@fortawesome/free-solid-svg-icons/faTimes';\nimport {CityInterface} from '../../interfaces/city.interface';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-cities',\n  templateUrl: './cities.component.html',\n  styleUrls: ['./cities.component.css']\n})\nexport class CitiesComponent implements OnInit {\n\n  // Иконка закрытия\n  faTime = faTimes;\n\n  // Города из json-файла\n  citiesFromJson: CityInterface[];\n  citiesFromJsonLoading: boolean;\n  citiesFromJsonError: object;\n\n  // Города из localStorage\n  citiesFromLocal: CityInterface[];\n  citiesFromLocalLoading: boolean;\n  citiesFromLocalError: object;\n\n  idsFromLocal: Array<number>;\n\n  // Показывать ли кнопку\n  buttonActive = false;\n  // Ошибка в модальном окне\n  modalError = false;\n  // Активный город\n  activeCity;\n\n  constructor(\n    private mainService: MainService\n    ) {\n    this.mainService.citiesFromJson.subscribe((cities) => {\n      this.citiesFromJson = cities;\n      if (this.citiesFromJson.length === this.idsFromLocal.length) {\n        this.buttonActive = false;\n      }\n    });\n    this.mainService.citiesFromJsonLoading.subscribe((loading) => {\n      this.citiesFromJsonLoading = loading;\n    });\n    this.mainService.citiesFromLocal.subscribe((cities) => {\n      this.citiesFromLocal = cities;\n    });\n    this.mainService.citiesFromLocalLoading.subscribe((loading) => {\n      this.citiesFromLocalLoading = loading;\n    });\n    this.mainService.idsFromLocal.subscribe((arr) => {\n      this.idsFromLocal = arr;\n    });\n    this.mainService.activeCity.subscribe((city) => {\n      this.activeCity = city;\n    });\n    this.mainService.buttonActive.subscribe((active) => {\n      this.buttonActive = active;\n    });\n  }\n\n  ngOnInit(): void {\n    this.mainService.getCitiesFromJson();\n    this.mainService.getCitiesFromLocal();\n  }\n\n  // Вывод погоды\n  // tslint:disable-next-line:typedef\n  getWeather(city) {\n    this.mainService.getWeather(city);\n  }\n\n  // Удаление города из быстрой панели\n  // tslint:disable-next-line:typedef\n  deleteCity(event, city) {\n    // Отменяем всплытие\n    event.stopPropagation();\n    this.mainService.deleteCityFromLocal(city);\n  }\n\n  // Добавление города в быструю панель\n  // tslint:disable-next-line:typedef\n  addCity(city) {\n    if (this.idsFromLocal) {\n      if (this.idsFromLocal.indexOf(city.id) === -1) {\n        $(`#modal`).modal(`hide`);\n        this.mainService.addCityToLocal(city);\n      } else {\n        this.modalError = true;\n        setTimeout(() => this.modalError = false, 1500);\n      }\n    } else {\n      $(`#modal`).modal(`hide`);\n      this.mainService.addCityToLocal(city);\n    }\n  }\n}\n","<div *ngIf=\"citiesFromLocalLoading; else titleCity\">\r\n  <div class=\"d-flex justify-content-center\">\r\n    <div class=\"spinner-border text-primary\" style=\"width: 3rem; height: 3rem;\" role=\"status\">\r\n      <span class=\"sr-only\">Loading...</span>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ng-template #titleCity>\r\n  <div *ngIf=\"citiesFromLocal.length; else cityList\" class=\"pb-4\">\r\n    <ul class=\"list-group city-ul\">\r\n      <div *ngFor=\"let city of citiesFromLocal\" class=\"rounded\">\r\n        <li type=\"button\" class=\"list-group-item city-li m-1\"\r\n            *ngIf=\"city.active\"\r\n            [ngClass]=\"activeCity === city.id ? 'active-li' : ''\"\r\n            (click)=\"getWeather(city)\">\r\n          {{city.name}}\r\n          <fa-icon [icon]=\"faTime\" (click)=\"deleteCity($event, city)\" class=\"close-icon\"></fa-icon>\r\n          <img class=\"weather-icon\" src=\"http://openweathermap.org/img/w/{{city.weather.weather.icon}}.png\">\r\n        </li>\r\n      </div>\r\n    </ul>\r\n  </div>\r\n  <ng-template #cityList>\r\n    <h1 class=\"lead second-title py-4\">Добавте сюда интересующие вас города...</h1>\r\n  </ng-template>\r\n  <div *ngIf=\"buttonActive\">\r\n    <button type=\"button\" class=\"btn btn-outline-primary btn-block\" data-toggle=\"modal\" data-target=\"#modal\">Добавить</button>\r\n  </div>\r\n</ng-template>\r\n\r\n\r\n<div class=\"modal fade\" id=\"modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div *ngIf=\"modalError\" class=\"alert alert-danger\">\r\n        Этот город уже добавлен!\r\n      </div>\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">Список городов:</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <ul class=\"list-group\">\r\n          <div *ngIf=\"!citiesFromJsonLoading; else loading\">\r\n            <div *ngFor=\"let city of citiesFromJson;\" class=\"rounded\">\r\n              <li *ngIf=\"city.active\" type=\"button\" class=\"list-group-item list-group-item-action my-1 modal-li\" (click)=\"addCity(city)\">{{city.name}}</li>\r\n            </div>\r\n          </div>\r\n          <ng-template #loading>\r\n            <div class=\"d-flex justify-content-center\">\r\n              <div class=\"spinner-border text-primary\" style=\"width: 3rem; height: 3rem;\" role=\"status\">\r\n                <span class=\"sr-only\">Loading...</span>\r\n              </div>\r\n            </div>\r\n          </ng-template>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron bg-white text-center\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-4 cities\">\n        <app-cities></app-cities>\n      </div>\n      <div class=\"col-md-8 weather\">\n        <app-weather></app-weather>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","<router-outlet></router-outlet>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {MainComponent} from './components/main/main.component';\nimport {WeatherComponent} from './components/weather/weather.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {CitiesComponent} from './components/cities/cities.component';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport {StringPipe} from './pipes/string.pipe';\nimport {DegreesPipe} from './pipes/degrees.pipe';\nimport {PressurePipe} from './pipes/pressure.pipe';\nimport {MainService} from './services/main.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent,\n    WeatherComponent,\n    CitiesComponent,\n    StringPipe,\n    DegreesPipe,\n    PressurePipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FontAwesomeModule,\n  ],\n  providers: [MainService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import {EventEmitter, Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {environment} from '../../environments/environment';\r\nimport {CityInterface} from '../interfaces/city.interface';\r\nimport {WeatherInterface} from '../interfaces/weather.interface';\r\n\r\n@Injectable()\r\nexport class MainService {\r\n\r\n  // Параметр для получения значения из объекта\r\n  param = `1h`;\r\n\r\n  // Активный город\r\n  activeCity: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  // Города из json-файла\r\n  // Локальные переменные\r\n  idsFromJsonArr: Array<number> = new Array<number>();\r\n  citiesFromJsonArr: Array<CityInterface> = new Array<CityInterface>();\r\n  // Связь с компонентом\r\n  citiesFromJsonLoading: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  citiesFromJson: EventEmitter<Array<CityInterface>> = new EventEmitter<Array<CityInterface>>();\r\n  citiesFromJsonError: EventEmitter<object> = new EventEmitter<object>();\r\n\r\n  // Города из localStorage\r\n  // Локальные переменные\r\n  idsFromLocalArr: Array<number> = new Array<number>();\r\n  citiesFromLocalArr: Array<CityInterface> = new Array<CityInterface>();\r\n  citiesFromLocalError: EventEmitter<object> = new EventEmitter<object>();\r\n  activeCityFromLocal: number;\r\n  // Связь с компонентом\r\n  citiesFromLocalLoading: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  citiesFromLocal: EventEmitter<Array<CityInterface>> = new EventEmitter<Array<CityInterface>>();\r\n  idsFromLocal: EventEmitter<Array<number>> = new EventEmitter<Array<number>>();\r\n  buttonActive: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  // Погода\r\n  weatherInThisCiti: EventEmitter<object> = new EventEmitter<object>();\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Получение значения из json файла\r\n  // tslint:disable-next-line:typedef\r\n  getCitiesFromJson() {\r\n    // Запрос к файлу\r\n    this.http.get(`assets/city.list.json`).toPromise()\r\n      .then((response: CityInterface[]) => {\r\n        response.forEach((city) => {\r\n          // Добавляем id каждого города в массив\r\n          this.idsFromJsonArr.push(Number(city.id));\r\n        });\r\n        // Для каждого id создаем переменную типа cityInterface и записываем ее в массив\r\n        this.idsFromJsonArr.forEach((id) => {\r\n          this.getCityInfo(id, this.citiesFromJsonArr, this.citiesFromJson, this.citiesFromJsonLoading,\r\n            () => {\r\n              // После загрузки хотя бы одного города - показываем кнопку\r\n              this.buttonActive.emit(true);\r\n            });\r\n        });\r\n        // Если ошибка - скрываем кнопку\r\n      }).catch(() => this.buttonActive.emit(false));\r\n  }\r\n\r\n  // Получение значения из localStorage\r\n  // tslint:disable-next-line:typedef\r\n  getCitiesFromLocal() {\r\n    // Выводим загрузку\r\n    this.citiesFromLocalLoading.emit(true);\r\n    // Обнуляем массив\r\n    this.citiesFromLocalArr = new Array<CityInterface>();\r\n    // Записываем содержимое localStorage в переменную\r\n    this.idsFromLocalArr = JSON.parse(localStorage.getItem('angular-weather-cities'));\r\n    // Если там есть данные\r\n    if (!this.idsFromLocalArr) {\r\n      this.idsFromLocalArr = new Array<number>();\r\n    }\r\n    if (this.idsFromLocalArr.length) {\r\n      // Получаем id последнего активного города\r\n      this.getActiveCity();\r\n      // Для каждого id создаем переменную типа cityInterface и записываем ее в массив\r\n      this.idsFromLocalArr.forEach((id) => {\r\n        this.getCityInfo(id, this.citiesFromLocalArr, this.citiesFromLocal, this.citiesFromLocalLoading,\r\n          (city) => {\r\n            if (this.activeCityFromLocal === city.id) {\r\n              this.getWeather(city);\r\n            }\r\n          });\r\n      });\r\n    } else {\r\n      this.citiesFromLocal.emit(this.citiesFromLocalArr);\r\n      this.citiesFromLocalLoading.emit(false);\r\n    }\r\n    // Отправляем ее для сравнения\r\n    this.idsFromLocal.emit(this.idsFromLocalArr);\r\n  }\r\n\r\n  // Добавление города в быстрый доступ\r\n  // tslint:disable-next-line:typedef\r\n  addCityToLocal(city) {\r\n    // Добавляем id выбранного города в массив\r\n    this.idsFromLocalArr.push(city.id);\r\n    // Смотрим - нужно ли убрать кнопку\r\n    if (this.idsFromLocalArr.length === this.citiesFromJsonArr.length) {\r\n      this.buttonActive.emit(false);\r\n    }\r\n    // Делаем города активным\r\n    this.setActiveCity(city.id);\r\n    // Записываем в localStorage\r\n    localStorage.setItem('angular-weather-cities', JSON.stringify(this.idsFromLocalArr));\r\n    // Заного выводим горорда в быстром доступе, так же обновляя данные о погоде в них\r\n    this.getCitiesFromLocal();\r\n    // Выводим погоду для данного города\r\n    this.getWeather(city);\r\n  }\r\n\r\n  // Удаление из быстрого доступа\r\n  // tslint:disable-next-line:typedef\r\n  deleteCityFromLocal(city) {\r\n    // Удаляем id выбранного города из массива\r\n    this.idsFromLocalArr.splice(this.idsFromLocalArr.indexOf(city.id), 1);\r\n    // Проверяем - был ли это последний город\r\n    if (!this.idsFromLocalArr.length) {\r\n      // Если да - обнуляем все данные\r\n      this.weatherInThisCiti.emit(null);\r\n      localStorage.setItem('angular-weather-cities', JSON.stringify(this.idsFromLocalArr));\r\n      this.setActiveCity(0);\r\n    } else {\r\n      // Показываем кнопку\r\n      this.buttonActive.emit(true);\r\n      // Если удаленный город был активным\r\n      if (city.id === this.activeCityFromLocal) {\r\n        // Выбираем новый активный город\r\n        this.setActiveCity(this.idsFromLocalArr[0]);\r\n      }\r\n      // Записывавем в localStorage отредактированный массив\r\n      localStorage.setItem('angular-weather-cities', JSON.stringify(this.idsFromLocalArr));\r\n    }\r\n    // Заного выводим города в быстром доступе, так же обновляя данные о погоде в них\r\n    this.getCitiesFromLocal();\r\n  }\r\n\r\n  // Получение погоды\r\n  // tslint:disable-next-line:typedef\r\n  getWeather(city) {\r\n    // Передаем значение в компонент погоды\r\n    this.weatherInThisCiti.emit(city);\r\n    // Делаем данный город активным\r\n    this.setActiveCity(city.id);\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  getCityInfo(id, arr, emit, loading, func) {\r\n    loading.emit(true);\r\n    // tslint:disable-next-line:new-parens\r\n    const city: CityInterface = new class implements CityInterface {\r\n      active: boolean;\r\n      id: number;\r\n      name: string;\r\n      // tslint:disable-next-line:new-parens\r\n      weather: WeatherInterface = new class implements WeatherInterface {\r\n        // @ts-ignore\r\n        clouds: { all: string } = {};\r\n        // @ts-ignore\r\n        main: { temp: string; feels: string; pressure: string; humidity: string } = {};\r\n        // @ts-ignore\r\n        rain: { rain1h: string } = {};\r\n        // @ts-ignore\r\n        snow: { snow1h: string } = {};\r\n        // @ts-ignore\r\n        weather: { id: string; main: string; description: string; icon: string } = {};\r\n        // @ts-ignore\r\n        wind: { speed: string } = {};\r\n      };\r\n    };\r\n    // tslint:disable-next-line:max-line-length\r\n    this.http.get(`${environment.apiUrl}/data/2.5/weather?id=${id}&lang=ru&units=metric&APPID=${environment.apiKey}`).toPromise()\r\n      .then((response: any ) => {\r\n        city.id = response.id;\r\n        city.name = response.name;\r\n        city.active = true;\r\n        city.weather.weather.id = response.weather[0].id;\r\n        city.weather.weather.main = response.weather[0].main;\r\n        city.weather.weather.description = response.weather[0].description;\r\n        city.weather.weather.icon = response.weather[0].icon;\r\n        city.weather.main.temp = response.main.temp;\r\n        city.weather.main.feels = response.main.feels_like;\r\n        city.weather.main.pressure = response.main.pressure;\r\n        city.weather.main.humidity = response.main.humidity;\r\n        if (response.wind) {\r\n          city.weather.wind.speed = response.wind.speed;\r\n        }\r\n        if (response.clouds) {\r\n          city.weather.clouds.all = response.clouds.all;\r\n        }\r\n        if (response.rain) {\r\n          city.weather.rain.rain1h = response.rain[this.param];\r\n        }\r\n        if (response.snow) {\r\n          city.weather.snow.snow1h = response.snow[this.param];\r\n        }\r\n        func(city);\r\n      })\r\n      .catch(() => {\r\n        city.active = false;\r\n      })\r\n      .finally(() => {\r\n        // Добавляем в массив созданный объект\r\n        arr.push(city);\r\n        // Передаем это массив в модуль\r\n        emit.emit(arr);\r\n        // Передаем в модуль, что загрузка завершенна\r\n        loading.emit(false);\r\n      });\r\n  }\r\n\r\n  // Записываем активный город\r\n  // tslint:disable-next-line:typedef\r\n  setActiveCity(id) {\r\n    this.activeCityFromLocal = id;\r\n    this.activeCity.emit(this.activeCityFromLocal);\r\n    localStorage.setItem('angular-weather-active', String(this.activeCityFromLocal));\r\n  }\r\n\r\n  // Получаем последний активный город\r\n  // tslint:disable-next-line:typedef\r\n  getActiveCity() {\r\n    this.activeCityFromLocal = Number(localStorage.getItem('angular-weather-active'));\r\n    this.activeCity.emit(this.activeCityFromLocal);\r\n  }\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'degrees'\r\n})\r\nexport class DegreesPipe implements PipeTransform {\r\n  transform(value: string): number {\r\n    return Math.round(+value);\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {MainService} from '../../services/main.service';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\nexport class WeatherComponent implements OnInit{\n\n  weather;\n\n  constructor(private mainService: MainService) {\n    // Начало загрузки\n    this.mainService.weatherInThisCiti.subscribe((weather) => {\n      this.weather = weather;\n    });\n  }\n\n  ngOnInit(): void {\n  }\n}\n","<div *ngIf=\"weather\">\n  <div class=\"row justify-content-center pb-4 m-0\">\n    <h1 class=\"lead title\">{{weather.name}}</h1>\n    <img class=\"weather-icon\" src=\"http://openweathermap.org/img/w/{{weather.weather.weather.icon}}.png\">\n  </div>\n  <div class=\"row justify-content-center\">\n    <h1 class=\"lead second\">{{weather.weather.weather.description | string}}</h1>\n  </div>\n  <ul class=\"list-group list-group-flush weather-list\">\n    <li class=\"list-group-item\">Температура: {{weather.weather.main.temp | degrees}}°</li>\n    <li class=\"list-group-item\">Ощущается: {{weather.weather.main.feels | degrees}}°</li>\n    <li class=\"list-group-item\">Атмосферное давление: {{this.weather.weather.main.pressure | pressure}}  мм.рт.ст</li>\n    <li class=\"list-group-item\">Влажность: {{weather.weather.main.humidity}} %</li>\n    <li class=\"list-group-item\">Скорость ветра: {{weather.weather.wind.speed}} м/с</li>\n    <li class=\"list-group-item\" *ngIf=\"weather.weather.rain.rain1h\">Количество осадков: {{weather.weather.rain.rain1h}} мм</li>\n    <li class=\"list-group-item\" *ngIf=\"weather.weather.snow.snow1h\">Количество осадков: {{weather.weather.snow.snow1h}} мм</li>\n    <li class=\"list-group-item\" *ngIf=\"weather.weather.clouds\">Облачность: {{weather.weather.clouds['all']}} %</li>\n  </ul>\n</div>\n\n\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {MainComponent} from './components/main/main.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: MainComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'pressure'\r\n})\r\nexport class PressurePipe implements PipeTransform {\r\n  transform(value: string): number {\r\n    return Math.round(+value * 0.750062);\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}